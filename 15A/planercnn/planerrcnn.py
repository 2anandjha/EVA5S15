# -*- coding: utf-8 -*-
"""PlanerRcnn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oc24PmrU9xHh2qx62Z_4gX_qb0gEauoy
"""

!wget https://developer.nvidia.com/compute/cuda/8.0/Prod2/local_installers/cuda-repo-ubuntu1604-8-0-local-ga2_8.0.61-1_amd64-deb
!dpkg -i cuda-repo-ubuntu1604-8-0-local-ga2_8.0.61-1_amd64-deb

!apt-key add /var/cuda-repo-8-0-local-ga2/7fa2af80.pub
!apt-get update
!apt-get install cuda=8.0.61-1
!apt autoremove

!pip install numpy==1.16.3

import numpy as np
np.__version__

!pip install torch==0.4.1.post2

!sudo apt install g++-5

#!apt-get install cuda gcc-5 g++-5 -y -qq;

!sudo apt install gcc-5

!sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 10
!sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 20
!sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 10
!sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 20
!sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30
!sudo update-alternatives --set cc /usr/bin/gcc
!sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30
!sudo update-alternatives --set c++ /usr/bin/g++

!sudo apt-get update --fix-missing

!pip install imgaug==0.2.5

!pip install folium==0.2.1

!pip install cffi==1.11.5

!pip install opencv-python==3.4.4.19

!pip install tqdm==4.59.0

!pip install scikit-image==0.14.2

from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
# % cd '/content/drive/MyDrive'

#!git clone  https://github.com/NVlabs/planercnn
!ls

# Commented out IPython magic to ensure Python compatibility.
# % cd '/content/drive/MyDrive/planeRCNN'

#!git clone  https://github.com/NVlabs/planercnn

# Commented out IPython magic to ensure Python compatibility.
# % cd '/content/drive/MyDrive/planeRCNN/planercnn'

# Commented out IPython magic to ensure Python compatibility.
# % cd nms/src/cuda/

!ls

!nvcc -c -o nms_kernel.cu.o nms_kernel.cu -x cu -Xcompiler -fPIC -arch=sm_50

!nvidia-smi -q -i 0 | grep "Product Name"

# Commented out IPython magic to ensure Python compatibility.
# % cd ../../

!python build.py

# Commented out IPython magic to ensure Python compatibility.
#  % cd ../

# Commented out IPython magic to ensure Python compatibility.
# %cd roialign/roi_align/src/cuda/

!nvcc -c -o crop_and_resize_kernel.cu.o crop_and_resize_kernel.cu -x cu -Xcompiler -fPIC -arch=sm_50

# Commented out IPython magic to ensure Python compatibility.
# % cd ../../

!ls

!python build.py

# Commented out IPython magic to ensure Python compatibility.
# % cd '/content/drive/My Drive/planeRCNN/planercnn/'

#!python evaluate.py --methods=f --suffix=warping_refine --dataset=inference --customDataFolder='/content/drive/MyDrive/YoloV3/data/assignment13/images' --numTestingImages 4000

!python evaluate.py --methods=f --suffix=warping_refine --dataset=inference --customDataFolder='/content/drive/MyDrive/YoloV3/data/assignment13/images' --numTestingImages 4000